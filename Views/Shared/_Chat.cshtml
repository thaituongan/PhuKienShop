<!-- Chat Widget -->
<div id="chat-widget" class="chat-widget">
    <div class="chat-header">
        <h5 style="color: white; padding-left: 2px;">Trò chuyện cùng admin
            <button id="toggleChat" class="toggle-chat">
        <i class="fas fa-times"></i>
    </button>
    </div>
    <div id="messages" class="chat-messages"></div>
    <div class="chat-input-container">
        <input type="text" id="messageInput" placeholder="Enter your message..." class="form-control" />
        <button id="sendButton" class="btn btn-primary">Send</button>
    </div>
</div>

<button id="toggleChatButton" class="chat-toggle-button">
    <i class="fas fa-comment-dots" style="color: #d9534f; font-size: 24px;"></i>
</button>

<input type="hidden" id="userName" value="@User.Identity.Name" />

<!-- SignalR Script and Chat Widget Logic -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .configureLogging(signalR.LogLevel.Information)
            .build();

        connection.on("ReceiveMessage", (user, message) => {
            const msg = document.createElement("div");
            msg.className = user === "Admin" ? "chat-message admin-message" : "chat-message user-message";
            msg.innerHTML = `${message}`;
            document.getElementById("messages").appendChild(msg);
            document.getElementById("messages").scrollTop = document.getElementById("messages").scrollHeight;

            // Save message to sessionStorage
            const chatHistory = JSON.parse(sessionStorage.getItem('chatHistory')) || [];
            chatHistory.push({ user, message });
            sessionStorage.setItem('chatHistory', JSON.stringify(chatHistory));
        });

        connection.start()
            .then(() => {
                console.log("SignalR connected.");
                document.getElementById("sendButton").disabled = false;

                // Load chat history from sessionStorage
                const chatHistory = JSON.parse(sessionStorage.getItem('chatHistory')) || [];
                chatHistory.forEach(({ user, message }) => {
                    const msg = document.createElement("div");
                    msg.className = user === "Admin" ? "chat-message admin-message" : "chat-message user-message";
                    msg.innerHTML = ` ${message}`;
                    //<strong>${user}</strong>:
                    document.getElementById("messages").appendChild(msg);
                });
                document.getElementById("messages").scrollTop = document.getElementById("messages").scrollHeight;
            })
            .catch(err => console.error("SignalR connection failed: " + err.toString()));

        // Function to send a message
        function sendMessage() {
            const user = document.getElementById("userName").value;
            const message = document.getElementById("messageInput").value;
            if (message.trim()) {
                connection.invoke("SendMessageToAdmin", user, message)
                    .catch(err => console.error("Error sending message: " + err.toString()));
                document.getElementById("messageInput").value = "";
            }
        }

        // Event listener for the Send button
        document.getElementById("sendButton").addEventListener("click", () => {
            sendMessage();
        });

        // Event listener for pressing Enter in the message input
        document.getElementById("messageInput").addEventListener("keydown", (event) => {
            if (event.key === "Enter") {
                event.preventDefault(); // Prevent the default action, like submitting a form
                sendMessage();
            }
        });

        let chatWidgetVisible = false;
        document.getElementById("toggleChatButton").addEventListener("click", () => {
            chatWidgetVisible = !chatWidgetVisible;
            document.getElementById("chat-widget").style.display = chatWidgetVisible ? "block" : "none";
        });

        document.getElementById("toggleChat").addEventListener("click", () => {
            chatWidgetVisible = !chatWidgetVisible;
            document.getElementById("chat-widget").style.display = chatWidgetVisible ? "block" : "none";
        });
    });
</script>

<style>
.chat-widget {
    z-index: 1000; 
    position: fixed;
    bottom: 0;
    right: 10px;
    width: 350px;
    background-color: #f5f5f5;
    border: 1px solid #ddd;
    border-radius: 8px;
    display: none;
    flex-direction: column;
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
}


    .chat-header {
        background-color: #343a40;
        color: white;
        padding: 10px;
        border-bottom: 1px solid #ddd;
        border-radius: 8px 8px 0 0;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .toggle-chat {
        cursor: pointer;
        color: #ccc;
        margin-left: 120px;
        font-size: 20px;
         background-color: transparent;
    border: none;
    color: white;
    cursor: pointer;
    padding: 5px;
    }

    .chat-messages {
        height: 300px;
        overflow-y: auto;
        padding: 10px;
        background-color: #fff;
    }

    .chat-message {
        margin-bottom: 10px;
        padding: 8px;
        border-radius: 10px;
        max-width: 99%;
        word-wrap: break-word;
    }

    .user-message {
    background-color: #eaeaeaf0;
  color: #373a3e;
  align-self: flex-end;
  text-align: right;
  border-top-right-radius: 0;
}

.admin-message {
    background-color: #d92323;
  color: #f9f3f3;
  align-self: flex-start;
  text-align: left;
  border-top-left-radius: 0;
}

    .chat-input-container {
        display: flex;
        padding: 10px;
        border-top: 1px solid #ddd;
        background-color: #f1f1f1;
        border-radius: 0 0 8px 8px;
    }

    .chat-input-container input {
        flex: 1;
        margin-right: 5px;
    }

    .chat-toggle-button {
        position: fixed;
        bottom: 15px;
        right: 15px;
        background-color: transparent;
        border: none;
        cursor: pointer;
        padding: 0;
        z-index: 999; 
    }

    .chat-toggle-button i {
       color: #d9534f;
  font-size: 45px;
  padding: 12px;
  background-color: black;
  border-radius: 50%;
  margin: 20px;
}
    }
</style>
